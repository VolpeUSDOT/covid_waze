install.packages("egg")
# setup ----
library(tidyverse)
library(egg)
load('Data/Waze_Covid_joined.RData')
output.loc = 'Output'
# Histograms by alert type
ggplot(df) +
geom_histogram(aes(count)) +
scale_x_log10() +
facet_wrap(~alert_type)
df_all <- df
df <- df %>%
filter(date <= Sys.Date()-7)
select_counties <- c('Middlesex County', 'Cook County', 'Snohomish County')
df_s <- df %>% filter(county %in% select_counties &
state %in% c('WA', 'MA', 'IL'))
ggplot(df_s, aes(x = date, y = count, color = alert_type)) +
geom_point(alpha = 0.2) +
geom_smooth() +
facet_wrap(~county,
nrow = length(select_counties),
scales = 'free_y') +
ggtitle('Time series of Waze alert counts for three example counties')
ggsave(file = file.path(output.loc, 'Example_full_time_series_plots.jpeg'),
width = 15, height = 15)
gp4 <- ggplot(df_s %>% filter(year == '2020' & month %in% c('01', '02', '03')), aes(x = date, y = count, color = alert_type)) +
geom_point(alpha = 0.2) +
geom_smooth() +
ylim(c(0, 6000)) +
facet_wrap(~county, nrow = length(select_counties), scale = 'free_y') +
ggtitle('2020')  +
geom_line(aes(x = date, y = cases),
size = 2,
color = 'black')
# Same, but now compare 2018 - 2020 sepearately for these counties
gp1 <- ggplot(df_s %>% filter(year == '2018' & month %in% c('01', '02', '03')), aes(x = date, y = count, color = alert_type)) +
geom_point(alpha = 0.2) +
geom_smooth() +
ylim(c(0, 6000)) +
facet_wrap(~county) +
ggtitle('2018')
gp2 <- ggplot(df_s %>% filter(year == '2019' & month %in% c('01', '02', '03')), aes(x = date, y = count, color = alert_type)) +
geom_point(alpha = 0.2) +
geom_smooth() +
ylim(c(0, 6000)) +
facet_wrap(~county) +
ggtitle('2019')
gp3 <- ggplot(df_s %>% filter(year == '2020' & month %in% c('01', '02', '03')), aes(x = date, y = count, color = alert_type)) +
geom_point(alpha = 0.2) +
geom_smooth() +
ylim(c(0, 6000)) +
facet_wrap(~county) +
ggtitle('2020')
gpall <- ggarrange(gp1, gp2, gp3,
ncol = 1,
heights = c(1, 1, 1))
# Histograms by alert type
ggplot(df) +
geom_histogram(aes(count)) +
scale_x_log10() +
facet_wrap(~alert_type)
dim(df)
names(df)
str(df)
df$weekday <- wday(df$date[1:100])
df$date[1:100]
#Generate placeholders for expected values by county/day for 2020 based on 2018 and 2019 data
#Use day of week (not day of year) to capture weekend/weekday patterns
df$dateWday <- df$date
#Generate placeholders for expected values by county/day for 2020 based on 2018 and 2019 data
#Use day of week (not day of year) to capture weekend/weekday patterns
df$dateWday <- as.Date(df$date)
wday(df$dateWday[1:100])
library(lubridate)
wday(df$dateWday[1:100])
wday(df$dateWday[10000:10100])
#Generate placeholders for expected values by county/day for 2020 based on 2018 and 2019 data
#Use day of week (not day of year) to capture weekend/weekday patterns
df$dateWday <- as.Date(df$date)
wday(ymd(080101))
wday(ymd(080101), label = TRUE, abbr = FALSE)
df$dateWday <- wday(ymd(df$dateWday),label = TRUE, abbr = FALSE)
week(df$dateWday[1:100])
week(df$date[1:100])
df$date[1:100]
#Save week of year
df$WeekYear <- week(df$date)
load('Data/Waze_Covid_joined.RData')
output.loc = 'Output'
# Histograms by alert type
ggplot(df) +
geom_histogram(aes(count)) +
scale_x_log10() +
facet_wrap(~alert_type)
# check df size
dim(df)
names(df)
str(df)
#Generate placeholders for expected values by county/day for 2020 based on 2018 and 2019 data
#Use day of week (not day of year) to capture weekend/weekday patterns
df$date_weekday <- as.Date(df$date)
df$day_week <- wday(ymd(df$date_weekday),label = TRUE, abbr = FALSE)
#Save week of year
df$week_year <- week(df$date)
table(df$WeekYear)
table(df$week_year)
table(df$day_week)
df$weekend <- df$day_week == "Saturday" | df$day_week == "Sunday"
table(df$weekend)
Waze_avg <- df %>%
group_by(alert_type, county, month_day_week) %>%
summarise(mean = mean(count), n = n())
Waze_avg <- df %>%
group_by(alert_type, county, month, day_week) %>%
summarise(mean = mean(count), n = n())
table(df$year)
df[,year!="2020"]
Waze_avg <- df_no2020 %>%
filter(df, year != "2020") %>%
group_by(alert_type, county, month, day_week) %>%
summarise(mean = mean(count), n = n())
Waze_avg <- df %>%
filter(df, year != "2020") %>%
group_by(alert_type, county, month, day_week) %>%
summarise(mean = mean(count), n = n())
#Placeholder values - county level averages by month and dow
df_no2020 <- filter(df, year != "2020")
Waze_avg <- df_no2020 %>%
filter(df, year != "2020") %>%
group_by(alert_type, county, month, day_week) %>%
summarise(mean = mean(count), n = n())
# setup ----
library(tidyverse)
library(egg)
library(lubridate)
load('Data/Waze_Covid_joined.RData')
output.loc = 'Output'
# check df size
dim(df)
names(df)
str(df)
#Generate placeholders for expected values by county/day for 2020 based on 2018 and 2019 data
#Use day of week (not day of year) to capture weekend/weekday patterns
df$date_weekday <- as.Date(df$date)
df$day_week <- wday(ymd(df$date_weekday),label = TRUE, abbr = FALSE)
df$weekend <- df$day_week == "Saturday" | df$day_week == "Sunday"
#Save week of year
df$week_year <- week(df$date)
#Placeholder values - county level averages by month and dow
df_no2020 <- filter(df, year != "2020")
Waze_avg <- df_no2020 %>%
group_by(alert_type, county, month, day_week) %>%
summarise(mean = mean(count), n = n())
View(Waze_avg)
View(Waze_avg)
Waze_avg <- df_no2020 %>%
group_by(alert_type, county, month, day_week) %>%
summarise(mean = mean(count), n = n(), na.rm=TRUE)
Waze_avg <- df_no2020 %>%
group_by(alert_type, county, month, day_week) %>%
summarise(mean = mean(count, round=0), n = n(), na.rm=TRUE)
?mean
Waze_avg <- df_no2020 %>%
group_by(alert_type, county, month, day_week) %>%
summarise(mean = round(mean(count),1), n = n(), na.rm=TRUE)
Waze_avg <- df_no2020 %>%
group_by(alert_type, state, county, month, day_week) %>%
summarise(mean = round(mean(count),1), n = n(), na.rm=TRUE)
#Placeholder values - county level averages by month and dow
df_no2020 <- filter(df, year != "2020")
Waze_avg <- df_no2020 %>%
group_by(alert_type, fips, state, county, month, day_week) %>%
summarise(mean = round(mean(count),1), n = n(), na.rm=TRUE)
# setup ----
library(tidyverse)
library(egg)
library(lubridate)
load('Data/Waze_Covid_joined.RData')
output.loc = 'Output'
table(df$fips)
length(df$fips)
length(unique(df$fips))
levels(df$fips)
nunique(df$fips)
unique(df$fips)
length(unique(df$fips))
length(unique(paste(df$state,df$county))
)
names(df)
#Use day of week (not day of year) to capture weekend/weekday patterns
df$date_weekday <- as.Date(df$date)
df$day_week <- wday(ymd(df$date_weekday),label = TRUE, abbr = FALSE)
df$weekend <- df$day_week == "Saturday" | df$day_week == "Sunday"
#Save week of year
df$week_year <- week(df$date)
#Placeholder values - county level averages by month and dow
df_no2020 <- filter(df, year != "2020")
Waze_avg <- df_no2020 %>%
group_by(alert_type, fips, state, county, month, day_week) %>%
summarise(mean = round(mean(count),1), n = n(), na.rm=TRUE)
